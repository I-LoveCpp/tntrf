
■ 概要

  iOS版Tweakとして動作し、対象のアプリを起動すると、HCA鍵を /tmp/aa ファイルに追記します。


■ 仕組み

  ADX2デクリプタ作成関数をフックし、自作コードへ飛ぶようにします。

  自作コードでは、鍵をファイルに書き込み、元の関数に戻ります。


■ 他のアプリへの応用

  Tweakのxmファイルとplistファイルをいじることで、他のアプリでも使えるようになります。

  1. Clutch2やIDAなどを使って、対象のアプリを逆アセンブルできる状態にします。

  2. HCAデフォルト鍵を生成している関数を見つけます。
     ↓のようなコードが書いてあると思います。

48 E4 F9 D2  MOVZ X8, #0xCF22000000000000
E8 E3 C5 F2  MOVK X8, #0x2F1F,LSL#32
88 0E BC F2  MOVK X8, #0xE074,LSL#16
08 2F 91 F2  MOVK X8, #0x8978
〜〜〜
xx xx xx 9x  BL sub_function_name

  3. 2で見つけた関数の最後にサブルーチンコール(xx xx xx 9x  BL 〜)があります。
     このコール先がデクリプタ作成関数です。
     デクリプタ作成関数内から、エラー文字列"E2011030301"が参照できるので、その文字列から調べることも可能です。
     この関数はこのような始まり方をしてると思います。

FC 6F BA A9 STP             X28, X27, [SP,#var_60]!
FA 67 01 A9 STP             X26, X25, [SP,#0x60+var_50]
F8 5F 02 A9 STP             X24, X23, [SP,#0x60+var_40]
F6 57 03 A9 STP             X22, X21, [SP,#0x60+var_30]
F4 4F 04 A9 STP             X20, X19, [SP,#0x60+var_20]
FD 7B 05 A9 STP             X29, X30, [SP,#0x60+var_10]
FD 43 01 91 ADD             X29, SP, #0x60+var_10
FF 83 01 D1 SUB             SP, SP, #0x60
F4 03 02 AA MOV             X20, X2         ←ここのアドレスを4.で記入します。
F6 03 01 AA MOV             X22, X1
F5 03 00 AA MOV             X21, X0

  4. Tweak.xmをテキストエディタで開き、アドレスを書き換えます。

     a_hookには、フックしたいアドレスを入れます。
     a_codeには、実行されないと思われる96バイト分の空き領域のアドレスを入れます。

  // アドレス
  unsigned long int a_hook   =0x1017E5DD8; // ここに3.で見つけたデクリプタ作成関数内の最初のMOVアドレスを入れます。
  unsigned long int a_code   =0x1017E63C0; // ここに2.で見つけたデフォルト鍵関数のアドレスを入れます。
  unsigned long int a_fopen  =0x1018F8984; // ここにfopenのアドレスを入れます。
  unsigned long int a_fclose =0x1018F8900; // ここにfcloseのアドレスを入れます。
  unsigned long int a_fwrite =0x1018F8A20; // ここにfwriteのアドレスを入れます。

  5. HCA.plistをテキストエディタで開き、対象アプリのバンドルIDに書き換えます。

  6. THEOS でビルドし、できたdebファイルをインストール後、リスプリングしておきます。

  7. アプリ起動で /tmp/aa ファイルに8バイトの復号鍵が追記されます。
     うまくいくと、そのままアプリが動作します。
     アプリが落ちても、復号鍵が追記されていればおｋです。


■ 免責事項

  このTweakを利用した事によるいかなる損害も作者は一切の責任を負いません。
  自己の責任の上で使用して下さい。

